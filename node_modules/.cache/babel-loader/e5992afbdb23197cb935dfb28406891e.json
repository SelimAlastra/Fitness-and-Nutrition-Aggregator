{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ibott\\\\MajorGroupProject\\\\src\\\\client_signup.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useFormik } from \"formik\";\nimport * as EmailValidator from \"email-validator\";\nimport * as Yup from \"yup\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./client_signup.css\";\nimport Facebook from './facebook_login.js';\nimport Google from './google_login.js';\nimport axios from 'axios';\n\nclass ClientSignup extends React.Component {\n  constructor(...args) {\n    var _s = $RefreshSig$();\n\n    super(...args);\n    this.eye = /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEye,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    });\n    this.SignUp = _s(() => {\n      _s();\n\n      const [passwordShown, setPasswordShown] = useState(false);\n\n      const togglePasswordVisiblity = () => {\n        setPasswordShown(passwordShown ? false : true);\n      }; // const state = {\n      //   listOfUsers: []\n      // };\n      // const componentDidMount = () => {\n      //   this.getUsersInfo();\n      // };\n      // const getUsersInfo = () => {\n      //    axios.get('http://localhost:3001')\n      //     .then((response) => {\n      //       //const data = response.data;\n      //      this.setState({ listOfUsers: response.data});\n      //       console.log('Data has been received!!');\n      //     })\n      //     .catch(() => {\n      //       alert('Error retrieving data!!!');\n      //     });\n      // }\n      // console.log(state.listOfUsers)\n\n\n      const schema = Yup.object().shape({\n        email: Yup.string().email(\"Email must be a valid email.\").required(\"No email provided.\"),\n        //  .notOneOf(state.listOfUsers, \"is there\"),\n        username: Yup.string().min(3, \"Username is too short - should be 3 chars minimum.\").max(30, \"Username is too long - should be 30 chars maximum.\").matches(/^[a-zA-Z0-9]*$/, \"Username should not contain space or special characters.\").required(\"No username provided.\"),\n        phoneNumber: Yup.string().required(\"No phone number provided.\").matches(/^\\+(?:[0-9]●?){6,14}[0-9]$/, \"Phone number must be valid.\"),\n        password: Yup.string().required(\"No password provided.\").min(8, \"Password is too short - should be 8 chars minimum.\").matches(/(?=.*[0-9])/, \"Password must contain a number.\").matches(/^[a-zA-Z0-9!@#\\$%\\^\\&*\\)\\(+=._-]+$/, \"Password should not contain blank space.\"),\n        retypePassword: Yup.string().oneOf([Yup.ref(\"password\")], \"Passwords don't match.\").required(\"Required.\")\n      });\n      const formik = useFormik({\n        initialValues: {\n          email: \"\",\n          username: \"\",\n          password: \"\",\n          retypePassword: \"\",\n          phoneNumber: \"\"\n        },\n        validationSchema: schema,\n        onSubmit: (values, {\n          setSubmitting\n        }) => {\n          setTimeout(() => {\n            console.log(\"Signing Up\", values);\n            const newData = {\n              email: values.email,\n              username: values.username,\n              password: values.password,\n              retypePassword: values.retypePassword,\n              phoneNumber: values.phoneNumber\n            };\n            axios.post('http://localhost:3001', newData);\n            setSubmitting(false);\n          }, 500);\n        }\n      });\n      return /*#__PURE__*/React.createElement(Form, {\n        autoComplete: \"off\",\n        onSubmit: formik.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        hidden: true,\n        htmlFor: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 3\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n        id: \"email\",\n        name: \"email\",\n        type: \"text\",\n        placeholder: \"Enter your email\",\n        value: formik.values.email,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        className: formik.errors.email && formik.touched.email && \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 5\n        }\n      }), formik.errors.email && formik.touched.email && /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        className: \"input-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 5\n        }\n      }, formik.errors.email), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(Form.Label, {\n        hidden: true,\n        htmlFor: \"username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 3\n        }\n      }, \"Username\"), /*#__PURE__*/React.createElement(Form.Control, {\n        id: \"username\",\n        name: \"username\",\n        type: \"text\",\n        placeholder: \"Create your username\",\n        value: formik.values.username,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        className: formik.errors.username && formik.touched.username && \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 5\n        }\n      }), formik.errors.username && formik.touched.username && /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        className: \"input-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 5\n        }\n      }, formik.errors.username), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(Form.Label, {\n        hidden: true,\n        htmlFor: \"phoneNumber\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 3\n        }\n      }, \"Phone Number\"), /*#__PURE__*/React.createElement(Form.Control, {\n        id: \"phoneNumber\",\n        name: \"phoneNumber\",\n        type: \"text\",\n        placeholder: \"Insert your phone number\",\n        value: formik.values.phoneNumber,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        className: formik.errors.phoneNumber && formik.touched.phoneNumber && \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 5\n        }\n      }), formik.errors.phoneNumber && formik.touched.phoneNumber && /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        className: \"input-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 5\n        }\n      }, formik.errors.phoneNumber), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(Form.Label, {\n        hidden: true,\n        htmlFor: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 3\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"parent1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        id: \"password\",\n        name: \"password\",\n        type: passwordShown ? \"text\" : \"password\",\n        placeholder: \"Enter your password\",\n        value: formik.values.password,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        className: formik.errors.password && formik.touched.password && \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"i\", {\n        className: \"child1\",\n        onClick: togglePasswordVisiblity,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 5\n        }\n      }, eye)), formik.errors.password && formik.touched.password && /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        className: \"input-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 5\n        }\n      }, formik.errors.password), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(Form.Label, {\n        hidden: true,\n        htmlFor: \"retypePassword\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 3\n        }\n      }, \"Re-type Password\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"parent2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        id: \"retypePassword\",\n        name: \"retypePassword\",\n        type: passwordShown ? \"text\" : \"password\",\n        placeholder: \"Re-enter your password\",\n        value: formik.values.retypePassword,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        className: formik.errors.retypePassword && formik.touched.retypePassword && \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"i\", {\n        className: \"child2\",\n        onClick: togglePasswordVisiblity,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 6\n        }\n      }, eye)), formik.errors.retypePassword && formik.touched.retypePassword && /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        className: \"input-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 5\n        }\n      }, formik.errors.retypePassword), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        className: \"registerButton\",\n        type: \"submit\",\n        disabled: formik.isSubmitting,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 5\n        }\n      }, \"Register\"), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginLeft: \"140px\",\n          marginTop: '15px',\n          marginBottom: '-20px',\n          fontFamily: \"'Helvetica', serif\",\n          fontWeight: \"bold\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 5\n        }\n      }, \"OR\"), /*#__PURE__*/React.createElement(Facebook, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Google, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 7\n        }\n      }));\n    }, \"DZkJ8JbTg+pxQWwtDsjk0W8M6ZE=\", false, function () {\n      return [useFormik];\n    });\n  }\n\n  PopUpSignUp() {\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n\n    const handleShow = () => setShow(true);\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      className: \"registerButton\",\n      onClick: handleShow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }\n    }, \"Create an account\"), /*#__PURE__*/React.createElement(Modal, {\n      show: show,\n      onHide: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, \"REGISTRATION FORM\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, \" \", /*#__PURE__*/React.createElement(SignUp, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 20\n      }\n    }), \" \")));\n  }\n\n}\n\n;\nexport default ClientSignup;","map":{"version":3,"sources":["C:/Users/ibott/MajorGroupProject/src/client_signup.js"],"names":["React","Component","useState","useEffect","Link","useFormik","EmailValidator","Yup","Button","Form","Modal","FontAwesomeIcon","faEye","Facebook","Google","axios","ClientSignup","eye","SignUp","passwordShown","setPasswordShown","togglePasswordVisiblity","schema","object","shape","email","string","required","username","min","max","matches","phoneNumber","password","retypePassword","oneOf","ref","formik","initialValues","validationSchema","onSubmit","values","setSubmitting","setTimeout","console","log","newData","post","handleSubmit","handleChange","handleBlur","errors","touched","color","isSubmitting","marginLeft","marginTop","marginBottom","fontFamily","fontWeight","PopUpSignUp","show","setShow","handleClose","handleShow"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useFormik } from \"formik\";\r\nimport * as EmailValidator from \"email-validator\";\r\nimport * as Yup from \"yup\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faEye} from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./client_signup.css\";\r\nimport Facebook from './facebook_login.js';\r\nimport Google from './google_login.js';\r\nimport axios from 'axios';\r\n\r\nclass ClientSignup extends React.Component {\r\n\r\neye = <FontAwesomeIcon icon={faEye} />;\r\n\r\nPopUpSignUp(){\r\n    const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  return(\r\n    <>\r\n    <Button className=\"registerButton\" onClick={handleShow}>\r\n      Create an account\r\n    </Button>\r\n\r\n    <Modal show={show} onHide={handleClose}>\r\n      \r\n      <Modal.Header closeButton>\r\n        <Modal.Title >REGISTRATION FORM</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body> <SignUp/> </Modal.Body>\r\n    </Modal>\r\n  </>\r\n  );\r\n};\r\n\r\n\r\nSignUp = () => {\r\n\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(passwordShown ? false : true);\r\n  };\r\n\r\n  \r\n  // const state = {\r\n  //   listOfUsers: []\r\n  // };\r\n  \r\n  // const componentDidMount = () => {\r\n  //   this.getUsersInfo();\r\n  // };\r\n\r\n\r\n  // const getUsersInfo = () => {\r\n  //    axios.get('http://localhost:3001')\r\n  //     .then((response) => {\r\n  //       //const data = response.data;\r\n  //      this.setState({ listOfUsers: response.data});\r\n  //       console.log('Data has been received!!');\r\n  //     })\r\n  //     .catch(() => {\r\n  //       alert('Error retrieving data!!!');\r\n  //     });\r\n  // }\r\n\r\n  // console.log(state.listOfUsers)\r\n\r\n  const schema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .email(\"Email must be a valid email.\")\r\n        .required(\"No email provided.\"),\r\n      //  .notOneOf(state.listOfUsers, \"is there\"),\r\n    username: Yup.string()\r\n        .min(3, \"Username is too short - should be 3 chars minimum.\")\r\n        .max(30, \"Username is too long - should be 30 chars maximum.\")\r\n        .matches(/^[a-zA-Z0-9]*$/, \"Username should not contain space or special characters.\")\r\n        .required(\"No username provided.\"),\r\n    phoneNumber: Yup.string()\r\n        .required(\"No phone number provided.\")\r\n        .matches(/^\\+(?:[0-9]●?){6,14}[0-9]$/, \"Phone number must be valid.\"),\r\n    password: Yup.string()\r\n        .required(\"No password provided.\")\r\n        .min(8, \"Password is too short - should be 8 chars minimum.\")\r\n        .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\r\n        .matches(/^[a-zA-Z0-9!@#\\$%\\^\\&*\\)\\(+=._-]+$/, \"Password should not contain blank space.\"),\r\n    retypePassword: Yup.string()\r\n        .oneOf([Yup.ref(\"password\")], \"Passwords don't match.\")\r\n        .required(\"Required.\")\r\n});\r\n\r\n  const formik = useFormik({\r\n  initialValues:{ email: \"\", username: \"\", password: \"\", retypePassword: \"\", phoneNumber: \"\" },\r\n  validationSchema: schema,\r\n  onSubmit: (values, { setSubmitting }) => {\r\n    setTimeout(() => {\r\n      console.log(\"Signing Up\", values);\r\n      const newData = {\r\n        email: values.email,\r\n        username: values.username,\r\n        password: values.password,\r\n        retypePassword: values.retypePassword,\r\n        phoneNumber: values.phoneNumber\r\n      }\r\n      axios.post('http://localhost:3001', newData)\r\n      setSubmitting(false);\r\n      \r\n    }, 500);\r\n  },\r\n  \r\n});\r\n\r\n\r\nreturn (\r\n<Form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n  <Form.Label hidden = {true} htmlFor=\"email\">Email</Form.Label>\r\n    <Form.Control\r\n        id=\"email\"\r\n        name=\"email\"\r\n        type=\"text\"\r\n        placeholder=\"Enter your email\"\r\n        value={formik.values.email}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        className={formik.errors.email && formik.touched.email && \"error\"}\r\n    />\r\n    {formik.errors.email && formik.touched.email && (\r\n    <div style={{color: \"red\"}} className=\"input-feedback\">{formik.errors.email}</div>\r\n    )}\r\n    <p/>\r\n\r\n  <Form.Label hidden = {true} htmlFor=\"username\">Username</Form.Label>\r\n    <Form.Control\r\n        id=\"username\"\r\n        name=\"username\"\r\n        type=\"text\"\r\n        placeholder=\"Create your username\"\r\n        value={formik.values.username}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        className={formik.errors.username && formik.touched.username && \"error\"}\r\n    />\r\n    {formik.errors.username && formik.touched.username && (\r\n    <div style={{color: \"red\"}} className=\"input-feedback\">{formik.errors.username}</div>\r\n    )}\r\n    <p/>\r\n\r\n  <Form.Label hidden = {true} htmlFor=\"phoneNumber\">Phone Number</Form.Label>\r\n    <Form.Control\r\n        id=\"phoneNumber\"\r\n        name=\"phoneNumber\"\r\n        type=\"text\"\r\n        placeholder=\"Insert your phone number\"\r\n        value={formik.values.phoneNumber}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        className={formik.errors.phoneNumber && formik.touched.phoneNumber && \"error\"}\r\n    />\r\n    {formik.errors.phoneNumber && formik.touched.phoneNumber && (\r\n    <div style={{color: \"red\"}} className=\"input-feedback\">{formik.errors.phoneNumber}</div>\r\n    )}\r\n    <p/>    \r\n\r\n  <Form.Label hidden = {true} htmlFor=\"password\">Password</Form.Label> \r\n    <div className=\"parent1\">\r\n    <Form.Control\r\n        id=\"password\"\r\n        name=\"password\"\r\n        type={passwordShown ? \"text\" : \"password\"}\r\n        placeholder=\"Enter your password\"\r\n        value={formik.values.password}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        className={formik.errors.password && formik.touched.password && \"error\"}\r\n    /> \r\n    <i className=\"child1\" onClick={togglePasswordVisiblity}>{eye}</i>\r\n    </div>\r\n    {formik.errors.password && formik.touched.password && (\r\n    <div style={{color: \"red\"}} className=\"input-feedback\">{formik.errors.password}</div>\r\n    )}\r\n    <p/>\r\n  \r\n  <Form.Label hidden = {true} htmlFor=\"retypePassword\">Re-type Password</Form.Label>\r\n    <div className=\"parent2\">\r\n    <Form.Control\r\n        id=\"retypePassword\"\r\n        name=\"retypePassword\"\r\n        type={passwordShown ? \"text\" : \"password\"}\r\n        placeholder=\"Re-enter your password\"\r\n        value={formik.values.retypePassword}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        className={formik.errors.retypePassword && formik.touched.retypePassword && \"error\"}\r\n    />\r\n     <i className=\"child2\" onClick={togglePasswordVisiblity}>{eye}</i>\r\n     </div>\r\n    {formik.errors.retypePassword && formik.touched.retypePassword && (\r\n    <div style={{color: \"red\"}} className=\"input-feedback\">{formik.errors.retypePassword}</div>\r\n    )}\r\n    <p/>\r\n  \r\n    <Button className=\"registerButton\" type=\"submit\" disabled={formik.isSubmitting}>\r\n        Register\r\n    </Button>\r\n    <div style={{marginLeft: \"140px\",marginTop: '15px',  marginBottom: '-20px', fontFamily:\"'Helvetica', serif\", fontWeight: \"bold\"}}>OR</div>  \r\n\r\n      <Facebook/>\r\n      <p/>\r\n      <Google/>\r\n\r\n\r\n</Form>\r\n);\r\n};\r\n};\r\n\r\nexport default ClientSignup;"]},"metadata":{},"sourceType":"module"}
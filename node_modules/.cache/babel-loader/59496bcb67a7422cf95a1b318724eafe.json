{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ibott\\\\MajorGroupProject\\\\src\\\\client_signup.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useFormik } from \"formik\";\nimport * as EmailValidator from \"email-validator\";\nimport * as Yup from \"yup\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./client_signup.css\";\nimport Facebook from './facebook_login.js';\nimport Google from './google_login.js';\nimport axios from 'axios';\nconst eye = /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n  icon: faEye,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }\n});\n\nfunction PopUpSignUp() {\n  _s();\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    className: \"registerButton\",\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, \"Create an account\"), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"REGISTRATION FORM\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \" \", /*#__PURE__*/React.createElement(SignUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 20\n    }\n  }), \" \")));\n}\n\n_s(PopUpSignUp, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = PopUpSignUp;\n;\n\nconst SignUp = () => {\n  _s2();\n\n  const [passwordShown, setPasswordShown] = useState(false);\n\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n\n  const state = {\n    listOfUsers: []\n  };\n\n  function componentDidMount() {\n    this.callServerForDatabase().then(data => this.setState({\n      listOfUsers: data\n    })).catch(err => console.log(err));\n  }\n\n  ;\n\n  const callServerForDatabase = async () => {\n    const response = await fetch(\"\");\n    const body = await response.json();\n    const data = Object.values(body);\n    if (response.status !== 200) throw Error(body.message);\n    return data;\n  };\n\n  const schema = Yup.object().shape({\n    email: Yup.string().email(\"Email must be a valid email.\").required(\"No email provided.\").notOneOf(this.state.listOfUsers, \"There is an account created with this email\"),\n    username: Yup.string().min(3, \"Username is too short - should be 3 chars minimum.\").max(30, \"Username is too long - should be 30 chars maximum.\").matches(/^[a-zA-Z0-9]*$/, \"Username should not contain space or special characters.\").required(\"No username provided.\"),\n    phoneNumber: Yup.string().required(\"No phone number provided.\").matches(/^\\+(?:[0-9]●?){6,14}[0-9]$/, \"Phone number must be valid.\"),\n    password: Yup.string().required(\"No password provided.\").min(8, \"Password is too short - should be 8 chars minimum.\").matches(/(?=.*[0-9])/, \"Password must contain a number.\").matches(/^[a-zA-Z0-9!@#\\$%\\^\\&*\\)\\(+=._-]+$/, \"Password should not contain blank space.\"),\n    retypePassword: Yup.string().oneOf([Yup.ref(\"password\")], \"Passwords don't match.\").required(\"Required.\")\n  });\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      retypePassword: \"\",\n      phoneNumber: \"\"\n    },\n    validationSchema: schema,\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        console.log(\"Signing Up\", values);\n        const newData = {\n          email: values.email,\n          username: values.username,\n          password: values.password,\n          retypePassword: values.retypePassword,\n          phoneNumber: values.phoneNumber\n        };\n        axios.post('http://localhost:3001', newData);\n        setSubmitting(false);\n      }, 500);\n    }\n  });\n  return /*#__PURE__*/React.createElement(Form, {\n    autoComplete: \"off\",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    hidden: true,\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 3\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n    id: \"email\",\n    name: \"email\",\n    type: \"text\",\n    placeholder: \"Enter your email\",\n    value: formik.values.email,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    className: formik.errors.email && formik.touched.email && \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }), formik.errors.email && formik.touched.email && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    className: \"input-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, formik.errors.email), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Form.Label, {\n    hidden: true,\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 3\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Form.Control, {\n    id: \"username\",\n    name: \"username\",\n    type: \"text\",\n    placeholder: \"Create your username\",\n    value: formik.values.username,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    className: formik.errors.username && formik.touched.username && \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }), formik.errors.username && formik.touched.username && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    className: \"input-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, formik.errors.username), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Form.Label, {\n    hidden: true,\n    htmlFor: \"phoneNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 3\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(Form.Control, {\n    id: \"phoneNumber\",\n    name: \"phoneNumber\",\n    type: \"text\",\n    placeholder: \"Insert your phone number\",\n    value: formik.values.phoneNumber,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    className: formik.errors.phoneNumber && formik.touched.phoneNumber && \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  }), formik.errors.phoneNumber && formik.touched.phoneNumber && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    className: \"input-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, formik.errors.phoneNumber), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Form.Label, {\n    hidden: true,\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 3\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"parent1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    id: \"password\",\n    name: \"password\",\n    type: passwordShown ? \"text\" : \"password\",\n    placeholder: \"Enter your password\",\n    value: formik.values.password,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    className: formik.errors.password && formik.touched.password && \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"child1\",\n    onClick: togglePasswordVisiblity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 5\n    }\n  }, eye)), formik.errors.password && formik.touched.password && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    className: \"input-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 5\n    }\n  }, formik.errors.password), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Form.Label, {\n    hidden: true,\n    htmlFor: \"retypePassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 3\n    }\n  }, \"Re-type Password\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"parent2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    id: \"retypePassword\",\n    name: \"retypePassword\",\n    type: passwordShown ? \"text\" : \"password\",\n    placeholder: \"Re-enter your password\",\n    value: formik.values.retypePassword,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    className: formik.errors.retypePassword && formik.touched.retypePassword && \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"child2\",\n    onClick: togglePasswordVisiblity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 6\n    }\n  }, eye)), formik.errors.retypePassword && formik.touched.retypePassword && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    className: \"input-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 5\n    }\n  }, formik.errors.retypePassword), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"registerButton\",\n    type: \"submit\",\n    disabled: formik.isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 5\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: \"140px\",\n      marginTop: '15px',\n      marginBottom: '-20px',\n      fontFamily: \"'Helvetica', serif\",\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 5\n    }\n  }, \"OR\"), /*#__PURE__*/React.createElement(Facebook, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Google, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s2(SignUp, \"DZkJ8JbTg+pxQWwtDsjk0W8M6ZE=\", false, function () {\n  return [useFormik];\n});\n\n_c2 = SignUp;\nexport default PopUpSignUp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PopUpSignUp\");\n$RefreshReg$(_c2, \"SignUp\");","map":{"version":3,"sources":["C:/Users/ibott/MajorGroupProject/src/client_signup.js"],"names":["React","Component","useState","useEffect","Link","useFormik","EmailValidator","Yup","Button","Form","Modal","FontAwesomeIcon","faEye","Facebook","Google","axios","eye","PopUpSignUp","show","setShow","handleClose","handleShow","SignUp","passwordShown","setPasswordShown","togglePasswordVisiblity","state","listOfUsers","componentDidMount","callServerForDatabase","then","data","setState","catch","err","console","log","response","fetch","body","json","Object","values","status","Error","message","schema","object","shape","email","string","required","notOneOf","username","min","max","matches","phoneNumber","password","retypePassword","oneOf","ref","formik","initialValues","validationSchema","onSubmit","setSubmitting","setTimeout","newData","post","handleSubmit","handleChange","handleBlur","errors","touched","color","isSubmitting","marginLeft","marginTop","marginBottom","fontFamily","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useFormik } from \"formik\";\r\nimport * as EmailValidator from \"email-validator\";\r\nimport * as Yup from \"yup\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faEye} from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./client_signup.css\";\r\nimport Facebook from './facebook_login.js';\r\nimport Google from './google_login.js';\r\nimport axios from 'axios';\r\n\r\n\r\nconst eye = <FontAwesomeIcon icon={faEye} />;\r\n\r\nfunction PopUpSignUp(){\r\n    const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  return(\r\n    <>\r\n    <Button className=\"registerButton\" onClick={handleShow}>\r\n      Create an account\r\n    </Button>\r\n\r\n    <Modal show={show} onHide={handleClose}>\r\n      \r\n      <Modal.Header closeButton>\r\n        <Modal.Title >REGISTRATION FORM</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body> <SignUp/> </Modal.Body>\r\n    </Modal>\r\n  </>\r\n  );\r\n};\r\n\r\n\r\nconst SignUp = () => {\r\n\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(passwordShown ? false : true);\r\n  };\r\n\r\n  \r\n  const state = {\r\n    listOfUsers: []\r\n  };\r\n  \r\n  function componentDidMount() {\r\n    this.callServerForDatabase()\r\n        .then(data => this.setState({ listOfUsers: data }))\r\n        .catch(err => console.log(err));\r\n  };\r\n  \r\n  const callServerForDatabase = async () => {\r\n    const response = await fetch(\"\");\r\n    const body = await response.json();\r\n    \r\n    const data = Object.values(body);\r\n  \r\n    if (response.status !== 200) throw Error(body.message);\r\n    return data;\r\n  };\r\n\r\n  const schema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .email(\"Email must be a valid email.\")\r\n        .required(\"No email provided.\")\r\n        .notOneOf(this.state.listOfUsers, \"There is an account created with this email\"),\r\n    username: Yup.string()\r\n        .min(3, \"Username is too short - should be 3 chars minimum.\")\r\n        .max(30, \"Username is too long - should be 30 chars maximum.\")\r\n        .matches(/^[a-zA-Z0-9]*$/, \"Username should not contain space or special characters.\")\r\n        .required(\"No username provided.\"),\r\n    phoneNumber: Yup.string()\r\n        .required(\"No phone number provided.\")\r\n        .matches(/^\\+(?:[0-9]●?){6,14}[0-9]$/, \"Phone number must be valid.\"),\r\n    password: Yup.string()\r\n        .required(\"No password provided.\")\r\n        .min(8, \"Password is too short - should be 8 chars minimum.\")\r\n        .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\r\n        .matches(/^[a-zA-Z0-9!@#\\$%\\^\\&*\\)\\(+=._-]+$/, \"Password should not contain blank space.\"),\r\n    retypePassword: Yup.string()\r\n        .oneOf([Yup.ref(\"password\")], \"Passwords don't match.\")\r\n        .required(\"Required.\")\r\n});\r\n\r\n  const formik = useFormik({\r\n  initialValues:{ email: \"\", username: \"\", password: \"\", retypePassword: \"\", phoneNumber: \"\" },\r\n  validationSchema: schema,\r\n  onSubmit: (values, { setSubmitting }) => {\r\n    setTimeout(() => {\r\n      console.log(\"Signing Up\", values);\r\n      const newData = {\r\n        email: values.email,\r\n        username: values.username,\r\n        password: values.password,\r\n        retypePassword: values.retypePassword,\r\n        phoneNumber: values.phoneNumber\r\n      }\r\n      axios.post('http://localhost:3001', newData)\r\n      setSubmitting(false);\r\n    }, 500);\r\n  },\r\n});\r\n\r\n\r\nreturn (\r\n<Form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n  <Form.Label hidden = {true} htmlFor=\"email\">Email</Form.Label>\r\n    <Form.Control\r\n        id=\"email\"\r\n        name=\"email\"\r\n        type=\"text\"\r\n        placeholder=\"Enter your email\"\r\n        value={formik.values.email}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        className={formik.errors.email && formik.touched.email && \"error\"}\r\n    />\r\n    {formik.errors.email && formik.touched.email && (\r\n    <div style={{color: \"red\"}} className=\"input-feedback\">{formik.errors.email}</div>\r\n    )}\r\n    <p/>\r\n\r\n  <Form.Label hidden = {true} htmlFor=\"username\">Username</Form.Label>\r\n    <Form.Control\r\n        id=\"username\"\r\n        name=\"username\"\r\n        type=\"text\"\r\n        placeholder=\"Create your username\"\r\n        value={formik.values.username}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        className={formik.errors.username && formik.touched.username && \"error\"}\r\n    />\r\n    {formik.errors.username && formik.touched.username && (\r\n    <div style={{color: \"red\"}} className=\"input-feedback\">{formik.errors.username}</div>\r\n    )}\r\n    <p/>\r\n\r\n  <Form.Label hidden = {true} htmlFor=\"phoneNumber\">Phone Number</Form.Label>\r\n    <Form.Control\r\n        id=\"phoneNumber\"\r\n        name=\"phoneNumber\"\r\n        type=\"text\"\r\n        placeholder=\"Insert your phone number\"\r\n        value={formik.values.phoneNumber}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        className={formik.errors.phoneNumber && formik.touched.phoneNumber && \"error\"}\r\n    />\r\n    {formik.errors.phoneNumber && formik.touched.phoneNumber && (\r\n    <div style={{color: \"red\"}} className=\"input-feedback\">{formik.errors.phoneNumber}</div>\r\n    )}\r\n    <p/>    \r\n\r\n  <Form.Label hidden = {true} htmlFor=\"password\">Password</Form.Label> \r\n    <div className=\"parent1\">\r\n    <Form.Control\r\n        id=\"password\"\r\n        name=\"password\"\r\n        type={passwordShown ? \"text\" : \"password\"}\r\n        placeholder=\"Enter your password\"\r\n        value={formik.values.password}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        className={formik.errors.password && formik.touched.password && \"error\"}\r\n    /> \r\n    <i className=\"child1\" onClick={togglePasswordVisiblity}>{eye}</i>\r\n    </div>\r\n    {formik.errors.password && formik.touched.password && (\r\n    <div style={{color: \"red\"}} className=\"input-feedback\">{formik.errors.password}</div>\r\n    )}\r\n    <p/>\r\n  \r\n  <Form.Label hidden = {true} htmlFor=\"retypePassword\">Re-type Password</Form.Label>\r\n    <div className=\"parent2\">\r\n    <Form.Control\r\n        id=\"retypePassword\"\r\n        name=\"retypePassword\"\r\n        type={passwordShown ? \"text\" : \"password\"}\r\n        placeholder=\"Re-enter your password\"\r\n        value={formik.values.retypePassword}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        className={formik.errors.retypePassword && formik.touched.retypePassword && \"error\"}\r\n    />\r\n     <i className=\"child2\" onClick={togglePasswordVisiblity}>{eye}</i>\r\n     </div>\r\n    {formik.errors.retypePassword && formik.touched.retypePassword && (\r\n    <div style={{color: \"red\"}} className=\"input-feedback\">{formik.errors.retypePassword}</div>\r\n    )}\r\n    <p/>\r\n  \r\n    <Button className=\"registerButton\" type=\"submit\" disabled={formik.isSubmitting}>\r\n        Register\r\n    </Button>\r\n    <div style={{marginLeft: \"140px\",marginTop: '15px',  marginBottom: '-20px', fontFamily:\"'Helvetica', serif\", fontWeight: \"bold\"}}>OR</div>  \r\n\r\n      <Facebook/>\r\n      <p/>\r\n      <Google/>\r\n\r\n\r\n</Form>\r\n);\r\n};\r\n\r\nexport default PopUpSignUp;"]},"metadata":{},"sourceType":"module"}
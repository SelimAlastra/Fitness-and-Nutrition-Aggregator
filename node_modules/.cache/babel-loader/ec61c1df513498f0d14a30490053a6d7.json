{"ast":null,"code":"var _jsxFileName = \"/Users/ioanaghinea/major-group-project/MajorGroupProject/src/user_login.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport { Formik } from \"formik\";\nimport * as EmailValidator from \"email-validator\";\nimport * as Yup from \"yup\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  /*#__PURE__*/\n  _jsxDEV(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        console.log(\"Logging in\", values);\n        setSubmitting(false);\n      }, 500);\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email().required(\"Required\")\n    }),\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email().required(\"Required\"),\n      password: Yup.string().required(\"No password provided.\").min(8, \"Password is too short - should be 8 chars minimum.\").matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n    }),\n    children: props => {\n      const {\n        values,\n        touched,\n        errors,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit\n      } = props;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          name: \"email\",\n          type: \"text\",\n          placeholder: \"Enter your email\",\n          value: values.email,\n          onChange: handleChange,\n          onBlur: handleBlur,\n          className: errors.email && touched.email && \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-feedback\",\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"Enter your password\",\n          value: values.password,\n          onChange: handleChange,\n          onBlur: handleBlur,\n          className: errors.password && touched.password && \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-feedback\",\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Login, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = Login;\n;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/ioanaghinea/major-group-project/MajorGroupProject/src/user_login.js"],"names":["React","Component","useState","Formik","EmailValidator","Yup","Button","Form","Modal","Login","show","setShow","handleClose","handleShow","email","password","values","setSubmitting","setTimeout","console","log","object","shape","string","required","min","matches","props","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit"],"mappings":"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","sourcesContent":["import React, { Component, useState} from 'react';\nimport { Formik } from \"formik\";\nimport * as EmailValidator from \"email-validator\";\nimport * as Yup from \"yup\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\n\n\n\nfunction Login () {\n    const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  <Formik\n  initialValues={{ email: \"\", password: \"\" }}\n  onSubmit={(values, { setSubmitting }) => {\n    setTimeout(() => {\n      console.log(\"Logging in\", values);\n      setSubmitting(false);\n    }, 500);\n  }}\n\n\n  validationSchema={Yup.object().shape({\n    email: Yup.string()\n        .email()\n        .required(\"Required\")\n    })}\n\n    validationSchema={Yup.object().shape({\n    email: Yup.string()\n        .email()\n        .required(\"Required\"),\n    password: Yup.string()\n        .required(\"No password provided.\")\n        .min(8, \"Password is too short - should be 8 chars minimum.\")\n        .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n    })}\n> \n\n{ props => {\n      const {\n        values,\n        touched,\n        errors,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit\n      } = props;\n\n      return (\n        <form onSubmit={handleSubmit}>\n\n        <label htmlFor=\"email\">Email</label>\n        <input\n        id=\"email\"\n        name=\"email\"\n        type=\"text\"\n        placeholder=\"Enter your email\"\n        value={values.email}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        className={errors.email && touched.email && \"error\"}\n        />\n        {errors.email && touched.email && (\n        <div className=\"input-feedback\">{errors.email}</div>\n        )}\n\n        <label htmlFor=\"password\">Password</label>\n        <input\n        id=\"password\"\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"Enter your password\"\n        value={values.password}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        className={errors.password && touched.password && \"error\"}\n        />\n        {errors.password && touched.password && (\n        <div className=\"input-feedback\">{errors.password}</div>\n        )}\n  \n        <button type=\"submit\" disabled={isSubmitting}>\n            Login\n        </button>\n  \n      </form>\n      );\n      }}\n\n    \n\n</Formik>\n};\n  export default Login;\n\n\n\n"]},"metadata":{},"sourceType":"module"}
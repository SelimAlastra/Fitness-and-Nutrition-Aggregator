{"ast":null,"code":"var _jsxFileName = \"/Users/ioanaghinea/major-group-project/MajorGroupProject/src/user_login.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport { Formik } from \"formik\";\nimport * as EmailValidator from \"email-validator\";\nimport * as Yup from \"yup\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PopUpLogin() {\n  _s();\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShow,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 20\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PopUpLogin, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = PopUpLogin;\n;\n\nconst Login = () => /*#__PURE__*/_jsxDEV(Formik, {\n  initialValues: {\n    email: \"\",\n    password: \"\"\n  },\n  onSubmit: (values, {\n    setSubmitting\n  }) => {\n    setTimeout(() => {\n      console.log(\"Logging in\", values);\n      setSubmitting(false);\n    }, 500);\n  },\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email().required(\"Required\")\n  }),\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email().required(\"Required\"),\n    password: Yup.string().required(\"No password provided.\").min(8, \"Password is too short - should be 8 chars minimum.\").matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n  }),\n  children: props => {\n    const {\n      values,\n      touched,\n      errors,\n      isSubmitting,\n      handleChange,\n      handleBlur,\n      handleSubmit\n    } = props;\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        htmlFor: \"user\",\n        children: \"Username or Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        id: \"user\",\n        name: \"user\",\n        type: \"text\",\n        placeholder: \"Enter your username or email\",\n        value: values.email,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.email && touched.email && \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-feedback\",\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        id: \"password\",\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Enter your password\",\n        value: values.password,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.password && touched.password && \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-feedback\",\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disabled: isSubmitting,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this);\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 33,\n  columnNumber: 3\n}, this);\n\n_c2 = Login;\nexport default PopUpLogin;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PopUpLogin\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"sources":["/Users/ioanaghinea/major-group-project/MajorGroupProject/src/user_login.js"],"names":["React","Component","useState","Formik","EmailValidator","Yup","Button","Form","Modal","PopUpLogin","show","setShow","handleClose","handleShow","Login","email","password","values","setSubmitting","setTimeout","console","log","object","shape","string","required","min","matches","props","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit"],"mappings":"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","sourcesContent":["import React, { Component, useState} from 'react';\nimport { Formik } from \"formik\";\nimport * as EmailValidator from \"email-validator\";\nimport * as Yup from \"yup\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction PopUpLogin(){\n    const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return(\n    <>\n    <Button variant=\"primary\" onClick={handleShow}>\n      Login\n    </Button>\n\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Login</Modal.Title>\n      </Modal.Header>\n      <Modal.Body> <Login/> </Modal.Body>\n    </Modal>\n  </>\n  );\n\n};\n\nconst Login = () => (\n    \n  <Formik\n  initialValues={{ email: \"\", password: \"\" }}\n  onSubmit={(values, { setSubmitting }) => {\n    setTimeout(() => {\n      console.log(\"Logging in\", values);\n      setSubmitting(false);\n    }, 500);\n  }}\n\n\n  validationSchema={Yup.object().shape({\n    email: Yup.string()\n        .email()\n        .required(\"Required\")\n    })}\n\n    validationSchema={Yup.object().shape({\n    email: Yup.string()\n        .email()\n        .required(\"Required\"),\n    password: Yup.string()\n        .required(\"No password provided.\")\n        .min(8, \"Password is too short - should be 8 chars minimum.\")\n        .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n    })}\n> \n\n{ props => {\n      const {\n        values,\n        touched,\n        errors,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit\n      } = props;\n\n      return (\n        <Form onSubmit={handleSubmit}>\n\n        <Form.Label htmlFor=\"user\">Username or Email</Form.Label>\n        <Form.Control\n        id=\"user\"\n        name=\"user\"\n        type=\"text\"\n        placeholder=\"Enter your username or email\"\n        value={values.email}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        className={errors.email && touched.email && \"error\"}\n        />\n        {errors.email && touched.email && (\n        <div className=\"input-feedback\">{errors.email}</div>\n        )}\n        <p/>\n\n        <Form.Label htmlFor=\"password\">Password</Form.Label>\n        <Form.Control\n        id=\"password\"\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"Enter your password\"\n        value={values.password}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        className={errors.password && touched.password && \"error\"}\n        />\n        {errors.password && touched.password && (\n        <div className=\"input-feedback\">{errors.password}</div>\n        )}\n        <p/>\n  \n        <Button type=\"submit\" disabled={isSubmitting}>\n            Login\n        </Button>\n  \n      </Form>\n      );\n      }}\n\n    \n\n</Formik>\n);\n  export default PopUpLogin;\n\n\n\n"]},"metadata":{},"sourceType":"module"}
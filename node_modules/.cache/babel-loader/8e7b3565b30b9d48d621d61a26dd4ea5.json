{"ast":null,"code":"var _jsxFileName = \"/Users/ioanaghinea/major-group-project/MajorGroupProject/src/user_login.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport { useFormik } from \"formik\";\nimport * as EmailValidator from \"email-validator\";\nimport * as Yup from \"yup\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport './user-login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst eye = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  icon: faEye\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 13\n}, this);\n\nfunction PopUpLogin() {\n  _s();\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"loginButton\",\n      variant: \"primary\",\n      onClick: handleShow,\n      children: \"LOGIN FORM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 20\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PopUpLogin, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = PopUpLogin;\n;\nconst schema = Yup.object().shape({\n  email: Yup.string().email(\"Email must be a valid email.\").required(\"No email provided.\"),\n  password: Yup.string().required(\"No password provided.\").min(8, \"Password is too short - should be 8 chars minimum.\").matches(/(?=.*[0-9])/, \"Password must contain a number.\").matches(/^\\s+$/, \"Password should not contain space.\")\n});\n\nconst Login = () => {\n  _s2();\n\n  const [passwordShown, setPasswordShown] = useState(false);\n\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: schema,\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        console.log(\"Logging in\", values);\n        setSubmitting(false);\n      }, 500);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      htmlFor: \"email\",\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      id: \"email\",\n      name: \"email\",\n      type: \"text\",\n      placeholder: \"Enter your email\",\n      value: formik.values.email,\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      className: formik.errors.email && formik.touched.email && \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), formik.errors.email && formik.touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      className: \"input-feedback\",\n      children: formik.errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n      htmlFor: \"password\",\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"parent\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        id: \"password\",\n        name: \"password\",\n        type: passwordShown ? \"text\" : \"password\",\n        placeholder: \"Enter your password\",\n        value: formik.values.password,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        className: formik.errors.password && formik.touched.password && \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"child\",\n        onClick: togglePasswordVisiblity,\n        children: eye\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this), formik.errors.password && formik.touched.password && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      className: \"input-feedback\",\n      children: formik.errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"loginButton\",\n      type: \"submit\",\n      disabled: formik.isSubmitting,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"\",\n      children: \"Forgot Password?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 1\n  }, this);\n};\n\n_s2(Login, \"DZkJ8JbTg+pxQWwtDsjk0W8M6ZE=\", false, function () {\n  return [useFormik];\n});\n\n_c2 = Login;\nexport default PopUpLogin;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PopUpLogin\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"sources":["/Users/ioanaghinea/major-group-project/MajorGroupProject/src/user_login.js"],"names":["React","Component","useState","useFormik","EmailValidator","Yup","Button","Form","Modal","FontAwesomeIcon","faEye","eye","PopUpLogin","show","setShow","handleClose","handleShow","schema","object","shape","email","string","required","password","min","matches","Login","passwordShown","setPasswordShown","togglePasswordVisiblity","formik","initialValues","validationSchema","onSubmit","values","setSubmitting","setTimeout","console","log","handleSubmit","handleChange","handleBlur","errors","touched","color","isSubmitting"],"mappings":"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","sourcesContent":["import React, { Component, useState} from 'react';\nimport { useFormik } from \"formik\";\nimport * as EmailValidator from \"email-validator\";\nimport * as Yup from \"yup\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faEye} from \"@fortawesome/free-solid-svg-icons\";\nimport './user-login.css'\nconst eye = <FontAwesomeIcon icon={faEye} />;\n\n\nfunction PopUpLogin(){\n    const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return(\n    <>\n    <Button className=\"loginButton\" variant=\"primary\" onClick={handleShow}>\n      LOGIN FORM\n    </Button>\n\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Login</Modal.Title>\n      </Modal.Header>\n      <Modal.Body> <Login/> </Modal.Body>\n    </Modal>\n  </>\n  );\n\n};\n\nconst schema = Yup.object().shape({\n    email: Yup.string()\n        .email(\"Email must be a valid email.\")\n        .required(\"No email provided.\"),\n    \n    password: Yup.string()\n        .required(\"No password provided.\")\n        .min(8, \"Password is too short - should be 8 chars minimum.\")\n        .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n        .matches(/^\\s+$/, \"Password should not contain space.\")\n});\n\nconst Login = () => {\n\n  const [passwordShown, setPasswordShown] = useState(false);\n\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n  \n  const formik = useFormik({\n  initialValues:{ email: \"\", password: \"\" },\n  validationSchema: schema,\n  onSubmit: (values, { setSubmitting }) => {\n    setTimeout(() => {\n      console.log(\"Logging in\", values);\n      setSubmitting(false);\n    }, 500);\n  },\n});\n\nreturn (\n<Form onSubmit={formik.handleSubmit}>\n\n    <Form.Label htmlFor=\"email\">Email</Form.Label>\n    <Form.Control\n        id=\"email\"\n        name=\"email\"\n        type=\"text\"\n        placeholder=\"Enter your email\"\n        value={formik.values.email}\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        className={formik.errors.email && formik.touched.email && \"error\"}\n    />\n    {formik.errors.email && formik.touched.email && (\n    <div style={{color: \"red\"}} className=\"input-feedback\">{formik.errors.email}</div>\n    )}\n    <p/>\n\n    <Form.Label htmlFor=\"password\">Password</Form.Label> \n    <div className=\"parent\">\n    <Form.Control \n        id=\"password\"\n        name=\"password\"\n        type={passwordShown ? \"text\" : \"password\"}\n        placeholder=\"Enter your password\"\n        value={formik.values.password}\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        className={formik.errors.password && formik.touched.password && \"error\"}\n    /> <i className=\"child\" onClick={togglePasswordVisiblity}>{eye}</i>\n    </div>\n    {formik.errors.password && formik.touched.password && (\n    <div style={{color: \"red\"}} className=\"input-feedback\">{formik.errors.password}</div>\n    )}\n    <p/>\n  \n    <Button className=\"loginButton\" type=\"submit\" disabled={formik.isSubmitting}>\n        Login\n    </Button>\n        \n    <p/>\n    <a href = \"\">Forgot Password?</a>\n  \n</Form>\n);\n};\n  export default PopUpLogin;\n\n\n\n"]},"metadata":{},"sourceType":"module"}
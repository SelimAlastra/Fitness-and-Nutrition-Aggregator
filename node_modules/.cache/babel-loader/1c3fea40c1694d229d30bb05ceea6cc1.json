{"ast":null,"code":"/**\r\n * Copyright (c) 2019 Digital Bazaar, Inc.\r\n */\nvar forge = require('./forge');\n\nrequire('./asn1');\n\nvar asn1 = forge.asn1;\nexports.privateKeyValidator = {\n  // PrivateKeyInfo\n  name: 'PrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'PrivateKeyInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // privateKeyAlgorithm\n    name: 'PrivateKeyInfo.privateKeyAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'privateKeyOid'\n    }]\n  }, {\n    // PrivateKey\n    name: 'PrivateKeyInfo',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'privateKey'\n  }]\n};\nexports.publicKeyValidator = {\n  name: 'SubjectPublicKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'subjectPublicKeyInfo',\n  value: [{\n    name: 'SubjectPublicKeyInfo.AlgorithmIdentifier',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'publicKeyOid'\n    }]\n  }, // capture group for ed25519PublicKey\n  {\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    composed: true,\n    captureBitStringValue: 'ed25519PublicKey'\n  } // FIXME: this is capture group for rsaPublicKey, use it in this API or\n  // discard?\n\n  /* {\r\n    // subjectPublicKey\r\n    name: 'SubjectPublicKeyInfo.subjectPublicKey',\r\n    tagClass: asn1.Class.UNIVERSAL,\r\n    type: asn1.Type.BITSTRING,\r\n    constructed: false,\r\n    value: [{\r\n      // RSAPublicKey\r\n      name: 'SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey',\r\n      tagClass: asn1.Class.UNIVERSAL,\r\n      type: asn1.Type.SEQUENCE,\r\n      constructed: true,\r\n      optional: true,\r\n      captureAsn1: 'rsaPublicKey'\r\n    }]\r\n  } */\n  ]\n};","map":{"version":3,"sources":["C:/Users/ibott/MajorGroupProject/node_modules/node-forge/lib/asn1-validator.js"],"names":["forge","require","asn1","exports","privateKeyValidator","name","tagClass","Class","UNIVERSAL","type","Type","SEQUENCE","constructed","value","INTEGER","capture","OID","OCTETSTRING","publicKeyValidator","captureAsn1","BITSTRING","composed","captureBitStringValue"],"mappings":"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","sourcesContent":["/**\r\n * Copyright (c) 2019 Digital Bazaar, Inc.\r\n */\r\n\r\nvar forge = require('./forge');\r\nrequire('./asn1');\r\nvar asn1 = forge.asn1;\r\n\r\nexports.privateKeyValidator = {\r\n  // PrivateKeyInfo\r\n  name: 'PrivateKeyInfo',\r\n  tagClass: asn1.Class.UNIVERSAL,\r\n  type: asn1.Type.SEQUENCE,\r\n  constructed: true,\r\n  value: [{\r\n    // Version (INTEGER)\r\n    name: 'PrivateKeyInfo.version',\r\n    tagClass: asn1.Class.UNIVERSAL,\r\n    type: asn1.Type.INTEGER,\r\n    constructed: false,\r\n    capture: 'privateKeyVersion'\r\n  }, {\r\n    // privateKeyAlgorithm\r\n    name: 'PrivateKeyInfo.privateKeyAlgorithm',\r\n    tagClass: asn1.Class.UNIVERSAL,\r\n    type: asn1.Type.SEQUENCE,\r\n    constructed: true,\r\n    value: [{\r\n      name: 'AlgorithmIdentifier.algorithm',\r\n      tagClass: asn1.Class.UNIVERSAL,\r\n      type: asn1.Type.OID,\r\n      constructed: false,\r\n      capture: 'privateKeyOid'\r\n    }]\r\n  }, {\r\n    // PrivateKey\r\n    name: 'PrivateKeyInfo',\r\n    tagClass: asn1.Class.UNIVERSAL,\r\n    type: asn1.Type.OCTETSTRING,\r\n    constructed: false,\r\n    capture: 'privateKey'\r\n  }]\r\n};\r\n\r\nexports.publicKeyValidator = {\r\n  name: 'SubjectPublicKeyInfo',\r\n  tagClass: asn1.Class.UNIVERSAL,\r\n  type: asn1.Type.SEQUENCE,\r\n  constructed: true,\r\n  captureAsn1: 'subjectPublicKeyInfo',\r\n  value: [{\r\n    name: 'SubjectPublicKeyInfo.AlgorithmIdentifier',\r\n    tagClass: asn1.Class.UNIVERSAL,\r\n    type: asn1.Type.SEQUENCE,\r\n    constructed: true,\r\n    value: [{\r\n      name: 'AlgorithmIdentifier.algorithm',\r\n      tagClass: asn1.Class.UNIVERSAL,\r\n      type: asn1.Type.OID,\r\n      constructed: false,\r\n      capture: 'publicKeyOid'\r\n    }]\r\n  },\r\n  // capture group for ed25519PublicKey\r\n  {\r\n    tagClass: asn1.Class.UNIVERSAL,\r\n    type: asn1.Type.BITSTRING,\r\n    constructed: false,\r\n    composed: true,\r\n    captureBitStringValue: 'ed25519PublicKey'\r\n  }\r\n  // FIXME: this is capture group for rsaPublicKey, use it in this API or\r\n  // discard?\r\n  /* {\r\n    // subjectPublicKey\r\n    name: 'SubjectPublicKeyInfo.subjectPublicKey',\r\n    tagClass: asn1.Class.UNIVERSAL,\r\n    type: asn1.Type.BITSTRING,\r\n    constructed: false,\r\n    value: [{\r\n      // RSAPublicKey\r\n      name: 'SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey',\r\n      tagClass: asn1.Class.UNIVERSAL,\r\n      type: asn1.Type.SEQUENCE,\r\n      constructed: true,\r\n      optional: true,\r\n      captureAsn1: 'rsaPublicKey'\r\n    }]\r\n  } */\r\n  ]\r\n};\r\n"]},"metadata":{},"sourceType":"script"}
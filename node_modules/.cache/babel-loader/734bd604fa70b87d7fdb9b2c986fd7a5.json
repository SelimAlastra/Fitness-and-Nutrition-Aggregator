{"ast":null,"code":"var _jsxFileName = \"/Users/ioanaghinea/major-group-project/MajorGroupProject/src/user_login.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useFormik, Field } from \"formik\";\nimport * as EmailValidator from \"email-validator\";\nimport * as Yup from \"yup\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst eye = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  icon: faEye\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 13\n}, this);\n\nfunction PopUpLogin() {\n  _s();\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShow,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 20\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PopUpLogin, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = PopUpLogin;\n;\nconst schema = Yup.object().shape({\n  email: Yup.string().email(\"Email must be a valid email.\").required(\"Required\"),\n  password: Yup.string().required(\"No password provided.\").min(8, \"Password is too short - should be 8 chars minimum.\").matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n});\n\nconst Login = () => {\n  _s2();\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    schema,\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        console.log(\"Logging in\", values);\n        setSubmitting(false);\n      }, 500);\n    }\n  });\n  {\n    props => {\n      const {\n        values,\n        touched,\n        errors,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit\n      } = props;\n      return /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          id: \"email\",\n          name: \"email\",\n          type: \"text\",\n          placeholder: \"Enter your email\",\n          value: values.email,\n          onChange: handleChange,\n          onBlur: handleBlur,\n          className: errors.email && touched.email && \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-feedback\",\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          id: \"password\",\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"Enter your password\",\n          value: values.password,\n          onChange: handleChange,\n          onBlur: handleBlur,\n          className: errors.password && touched.password && \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n          style: {\n            position: 'absolute',\n            top: '50%',\n            right: '5%'\n          },\n          children: eye\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 12\n        }, this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-feedback\",\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"\",\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this);\n    };\n  }\n};\n\n_s2(Login, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c2 = Login;\nexport default PopUpLogin;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PopUpLogin\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"sources":["/Users/ioanaghinea/major-group-project/MajorGroupProject/src/user_login.js"],"names":["React","Component","useState","useForm","useFormik","Field","EmailValidator","Yup","Button","Form","Modal","FontAwesomeIcon","faEye","eye","PopUpLogin","show","setShow","handleClose","handleShow","schema","object","shape","email","string","required","password","min","matches","Login","formik","initialValues","onSubmit","values","setSubmitting","setTimeout","console","log","props","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","position","top","right"],"mappings":"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","sourcesContent":["import React, { Component, useState} from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useFormik, Field } from \"formik\";\nimport * as EmailValidator from \"email-validator\";\nimport * as Yup from \"yup\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faEye} from \"@fortawesome/free-solid-svg-icons\";\nconst eye = <FontAwesomeIcon icon={faEye} />;\n\n\nfunction PopUpLogin(){\n    const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return(\n    <>\n    <Button variant=\"primary\" onClick={handleShow}>\n      Login\n    </Button>\n\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Login</Modal.Title>\n      </Modal.Header>\n      <Modal.Body> <Login/> </Modal.Body>\n    </Modal>\n  </>\n  );\n\n};\n\nconst schema = Yup.object().shape({\n    email: Yup.string()\n        .email(\"Email must be a valid email.\")\n        .required(\"Required\"),\n    \n    password: Yup.string()\n        .required(\"No password provided.\")\n        .min(8, \"Password is too short - should be 8 chars minimum.\")\n        .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n});\n\nconst Login = () => {\n  \n  const formik = useFormik({\n  initialValues:{ email: \"\", password: \"\" },\n  schema,\n  onSubmit: (values, { setSubmitting }) => {\n    setTimeout(() => {\n      console.log(\"Logging in\", values);\n      setSubmitting(false);\n    }, 500);\n  },\n});\n\n\n{ props => {\n      const {\n        values,\n        touched,\n        errors,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit\n      } = props;\n\n      return (\n        <Form onSubmit={handleSubmit}>\n\n        <Form.Label htmlFor=\"email\">Email</Form.Label>\n        <Form.Control\n        id=\"email\"\n        name=\"email\"\n        type=\"text\"\n        placeholder=\"Enter your email\"\n        value={values.email}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        className={errors.email && touched.email && \"error\"}\n        />\n        {errors.email && touched.email && (\n        <div className=\"input-feedback\">{errors.email}</div>\n        )}\n        <p/>\n\n        <Form.Label htmlFor=\"password\">Password</Form.Label> \n        <Form.Control\n        id=\"password\"\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"Enter your password\"\n        value={values.password}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        className={errors.password && touched.password && \"error\"}\n        /> <i style={{position: 'absolute', top:'50%', right:'5%'}}>{eye}</i>\n        {errors.password && touched.password && (\n        <div className=\"input-feedback\">{errors.password}</div>\n        )}\n        <p/>\n  \n        <Button type=\"submit\" disabled={isSubmitting}>\n            Login\n        </Button>\n        \n        <p/>\n        <a href = \"\">Forgot Password?</a>\n  \n      </Form>\n      );\n      }}\n};\n  export default PopUpLogin;\n\n\n\n"]},"metadata":{},"sourceType":"module"}
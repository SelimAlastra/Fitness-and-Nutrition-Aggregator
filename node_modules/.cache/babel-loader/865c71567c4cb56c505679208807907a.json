{"ast":null,"code":"var _jsxFileName = \"/Users/ioanaghinea/major-group-project/MajorGroupProject/src/user_login.js\";\nimport React, { Component, useState } from 'react';\nimport { Formik } from \"formik\";\nimport * as EmailValidator from \"email-validator\";\nimport * as Yup from \"yup\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => /*#__PURE__*/_jsxDEV(Formik, {\n  initialValues: {\n    email: \"\",\n    password: \"\"\n  },\n  onSubmit: (values, {\n    setSubmitting\n  }) => {\n    setTimeout(() => {\n      console.log(\"Logging in\", values);\n      setSubmitting(false);\n    }, 500);\n  },\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email().required(\"Required\")\n  }),\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email().required(\"Required\"),\n    password: Yup.string().required(\"No password provided.\").min(8, \"Password is too short - should be 8 chars minimum.\").matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n  }),\n  children: props => {\n    const {\n      values,\n      touched,\n      errors,\n      isSubmitting,\n      handleChange,\n      handleBlur,\n      handleSubmit\n    } = props;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\",\n        name: \"email\",\n        type: \"text\",\n        placeholder: \"Enter your email\",\n        value: values.email,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.email && touched.email && \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-feedback\",\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"password\",\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Enter your password\",\n        value: values.password,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.password && touched.password && \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-feedback\",\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this);\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this);\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/ioanaghinea/major-group-project/MajorGroupProject/src/user_login.js"],"names":["React","Component","useState","Formik","EmailValidator","Yup","Button","Form","Modal","Login","email","password","values","setSubmitting","setTimeout","console","log","object","shape","string","required","min","matches","props","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit"],"mappings":"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","sourcesContent":["import React, { Component, useState} from 'react';\nimport { Formik } from \"formik\";\nimport * as EmailValidator from \"email-validator\";\nimport * as Yup from \"yup\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modals';\n\n\n\nconst Login = () => (\n  <Formik\n  initialValues={{ email: \"\", password: \"\" }}\n  onSubmit={(values, { setSubmitting }) => {\n    setTimeout(() => {\n      console.log(\"Logging in\", values);\n      setSubmitting(false);\n    }, 500);\n  }}\n\n\n  validationSchema={Yup.object().shape({\n    email: Yup.string()\n        .email()\n        .required(\"Required\")\n    })}\n\n    validationSchema={Yup.object().shape({\n    email: Yup.string()\n        .email()\n        .required(\"Required\"),\n    password: Yup.string()\n        .required(\"No password provided.\")\n        .min(8, \"Password is too short - should be 8 chars minimum.\")\n        .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n    })}\n> \n\n\n{ props => {\n      const {\n        values,\n        touched,\n        errors,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit\n      } = props;\n\n      return (\n        <form onSubmit={handleSubmit}>\n\n        <label htmlFor=\"email\">Email</label>\n        <input\n        id=\"email\"\n        name=\"email\"\n        type=\"text\"\n        placeholder=\"Enter your email\"\n        value={values.email}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        className={errors.email && touched.email && \"error\"}\n        />\n        {errors.email && touched.email && (\n        <div className=\"input-feedback\">{errors.email}</div>\n        )}\n\n        <label htmlFor=\"password\">Password</label>\n        <input\n        id=\"password\"\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"Enter your password\"\n        value={values.password}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        className={errors.password && touched.password && \"error\"}\n        />\n        {errors.password && touched.password && (\n        <div className=\"input-feedback\">{errors.password}</div>\n        )}\n  \n        <button type=\"submit\" disabled={isSubmitting}>\n            Login\n        </button>\n  \n      </form>\n      );\n      }}\n\n    \n\n</Formik>\n);\n  export default Login;\n\n\n\n"]},"metadata":{},"sourceType":"module"}
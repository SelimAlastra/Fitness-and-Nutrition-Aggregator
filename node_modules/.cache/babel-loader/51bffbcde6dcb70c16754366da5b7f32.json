{"ast":null,"code":"\"use strict\"; // Copyright 2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExternalAccountClient = void 0;\n\nconst baseexternalclient_1 = require(\"./baseexternalclient\");\n\nconst identitypoolclient_1 = require(\"./identitypoolclient\");\n\nconst awsclient_1 = require(\"./awsclient\");\n/**\r\n * Dummy class with no constructor. Developers are expected to use fromJSON.\r\n */\n\n\nclass ExternalAccountClient {\n  constructor() {\n    throw new Error('ExternalAccountClients should be initialized via: ' + 'ExternalAccountClient.fromJSON(), ' + 'directly via explicit constructors, eg. ' + 'new AwsClient(options), new IdentityPoolClient(options) or via ' + 'new GoogleAuth(options).getClient()');\n  }\n  /**\r\n   * This static method will instantiate the\r\n   * corresponding type of external account credential depending on the\r\n   * underlying credential source.\r\n   * @param options The external account options object typically loaded\r\n   *   from the external account JSON credential file.\r\n   * @param additionalOptions Optional additional behavior customization\r\n   *   options. These currently customize expiration threshold time and\r\n   *   whether to retry on 401/403 API request errors.\r\n   * @return A BaseExternalAccountClient instance or null if the options\r\n   *   provided do not correspond to an external account credential.\r\n   */\n\n\n  static fromJSON(options, additionalOptions) {\n    var _a;\n\n    if (options && options.type === baseexternalclient_1.EXTERNAL_ACCOUNT_TYPE) {\n      if ((_a = options.credential_source) === null || _a === void 0 ? void 0 : _a.environment_id) {\n        return new awsclient_1.AwsClient(options, additionalOptions);\n      } else {\n        return new identitypoolclient_1.IdentityPoolClient(options, additionalOptions);\n      }\n    } else {\n      return null;\n    }\n  }\n\n}\n\nexports.ExternalAccountClient = ExternalAccountClient;","map":{"version":3,"sources":["C:/Users/ibott/MajorGroupProject/node_modules/google-auth-library/build/src/auth/externalclient.js"],"names":["Object","defineProperty","exports","value","ExternalAccountClient","baseexternalclient_1","require","identitypoolclient_1","awsclient_1","constructor","Error","fromJSON","options","additionalOptions","_a","type","EXTERNAL_ACCOUNT_TYPE","credential_source","environment_id","AwsClient","IdentityPoolClient"],"mappings":"AAAA,a,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,qBAAR,GAAgC,KAAK,CAArC;;AACA,MAAMC,oBAAoB,GAAGC,OAAO,CAAC,sBAAD,CAApC;;AACA,MAAMC,oBAAoB,GAAGD,OAAO,CAAC,sBAAD,CAApC;;AACA,MAAME,WAAW,GAAGF,OAAO,CAAC,aAAD,CAA3B;AACA;AACA;AACA;;;AACA,MAAMF,qBAAN,CAA4B;AACxBK,EAAAA,WAAW,GAAG;AACV,UAAM,IAAIC,KAAJ,CAAU,uDACZ,oCADY,GAEZ,0CAFY,GAGZ,iEAHY,GAIZ,qCAJE,CAAN;AAKH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACmB,SAARC,QAAQ,CAACC,OAAD,EAAUC,iBAAV,EAA6B;AACxC,QAAIC,EAAJ;;AACA,QAAIF,OAAO,IAAIA,OAAO,CAACG,IAAR,KAAiBV,oBAAoB,CAACW,qBAArD,EAA4E;AACxE,UAAI,CAACF,EAAE,GAAGF,OAAO,CAACK,iBAAd,MAAqC,IAArC,IAA6CH,EAAE,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,EAAE,CAACI,cAA7E,EAA6F;AACzF,eAAO,IAAIV,WAAW,CAACW,SAAhB,CAA0BP,OAA1B,EAAmCC,iBAAnC,CAAP;AACH,OAFD,MAGK;AACD,eAAO,IAAIN,oBAAoB,CAACa,kBAAzB,CAA4CR,OAA5C,EAAqDC,iBAArD,CAAP;AACH;AACJ,KAPD,MAQK;AACD,aAAO,IAAP;AACH;AACJ;;AAjCuB;;AAmC5BX,OAAO,CAACE,qBAAR,GAAgCA,qBAAhC","sourcesContent":["\"use strict\";\r\n// Copyright 2021 Google LLC\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//      http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ExternalAccountClient = void 0;\r\nconst baseexternalclient_1 = require(\"./baseexternalclient\");\r\nconst identitypoolclient_1 = require(\"./identitypoolclient\");\r\nconst awsclient_1 = require(\"./awsclient\");\r\n/**\r\n * Dummy class with no constructor. Developers are expected to use fromJSON.\r\n */\r\nclass ExternalAccountClient {\r\n    constructor() {\r\n        throw new Error('ExternalAccountClients should be initialized via: ' +\r\n            'ExternalAccountClient.fromJSON(), ' +\r\n            'directly via explicit constructors, eg. ' +\r\n            'new AwsClient(options), new IdentityPoolClient(options) or via ' +\r\n            'new GoogleAuth(options).getClient()');\r\n    }\r\n    /**\r\n     * This static method will instantiate the\r\n     * corresponding type of external account credential depending on the\r\n     * underlying credential source.\r\n     * @param options The external account options object typically loaded\r\n     *   from the external account JSON credential file.\r\n     * @param additionalOptions Optional additional behavior customization\r\n     *   options. These currently customize expiration threshold time and\r\n     *   whether to retry on 401/403 API request errors.\r\n     * @return A BaseExternalAccountClient instance or null if the options\r\n     *   provided do not correspond to an external account credential.\r\n     */\r\n    static fromJSON(options, additionalOptions) {\r\n        var _a;\r\n        if (options && options.type === baseexternalclient_1.EXTERNAL_ACCOUNT_TYPE) {\r\n            if ((_a = options.credential_source) === null || _a === void 0 ? void 0 : _a.environment_id) {\r\n                return new awsclient_1.AwsClient(options, additionalOptions);\r\n            }\r\n            else {\r\n                return new identitypoolclient_1.IdentityPoolClient(options, additionalOptions);\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\nexports.ExternalAccountClient = ExternalAccountClient;\r\n//# sourceMappingURL=externalclient.js.map"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nconst events_1 = require(\"events\");\n\nconst debug_1 = __importDefault(require(\"debug\"));\n\nconst promisify_1 = __importDefault(require(\"./promisify\"));\n\nconst debug = debug_1.default('agent-base');\n\nfunction isAgent(v) {\n  return Boolean(v) && typeof v.addRequest === 'function';\n}\n\nfunction isSecureEndpoint() {\n  const {\n    stack\n  } = new Error();\n  if (typeof stack !== 'string') return false;\n  return stack.split('\\n').some(l => l.indexOf('(https.js:') !== -1 || l.indexOf('node:https:') !== -1);\n}\n\nfunction createAgent(callback, opts) {\n  return new createAgent.Agent(callback, opts);\n}\n\n(function (createAgent) {\n  /**\r\n   * Base `http.Agent` implementation.\r\n   * No pooling/keep-alive is implemented by default.\r\n   *\r\n   * @param {Function} callback\r\n   * @api public\r\n   */\n  class Agent extends events_1.EventEmitter {\n    constructor(callback, _opts) {\n      super();\n      let opts = _opts;\n\n      if (typeof callback === 'function') {\n        this.callback = callback;\n      } else if (callback) {\n        opts = callback;\n      } // Timeout for the socket to be returned from the callback\n\n\n      this.timeout = null;\n\n      if (opts && typeof opts.timeout === 'number') {\n        this.timeout = opts.timeout;\n      } // These aren't actually used by `agent-base`, but are required\n      // for the TypeScript definition files in `@types/node` :/\n\n\n      this.maxFreeSockets = 1;\n      this.maxSockets = 1;\n      this.maxTotalSockets = Infinity;\n      this.sockets = {};\n      this.freeSockets = {};\n      this.requests = {};\n      this.options = {};\n    }\n\n    get defaultPort() {\n      if (typeof this.explicitDefaultPort === 'number') {\n        return this.explicitDefaultPort;\n      }\n\n      return isSecureEndpoint() ? 443 : 80;\n    }\n\n    set defaultPort(v) {\n      this.explicitDefaultPort = v;\n    }\n\n    get protocol() {\n      if (typeof this.explicitProtocol === 'string') {\n        return this.explicitProtocol;\n      }\n\n      return isSecureEndpoint() ? 'https:' : 'http:';\n    }\n\n    set protocol(v) {\n      this.explicitProtocol = v;\n    }\n\n    callback(req, opts, fn) {\n      throw new Error('\"agent-base\" has no default implementation, you must subclass and override `callback()`');\n    }\n    /**\r\n     * Called by node-core's \"_http_client.js\" module when creating\r\n     * a new HTTP request with this Agent instance.\r\n     *\r\n     * @api public\r\n     */\n\n\n    addRequest(req, _opts) {\n      const opts = Object.assign({}, _opts);\n\n      if (typeof opts.secureEndpoint !== 'boolean') {\n        opts.secureEndpoint = isSecureEndpoint();\n      }\n\n      if (opts.host == null) {\n        opts.host = 'localhost';\n      }\n\n      if (opts.port == null) {\n        opts.port = opts.secureEndpoint ? 443 : 80;\n      }\n\n      if (opts.protocol == null) {\n        opts.protocol = opts.secureEndpoint ? 'https:' : 'http:';\n      }\n\n      if (opts.host && opts.path) {\n        // If both a `host` and `path` are specified then it's most\n        // likely the result of a `url.parse()` call... we need to\n        // remove the `path` portion so that `net.connect()` doesn't\n        // attempt to open that as a unix socket file.\n        delete opts.path;\n      }\n\n      delete opts.agent;\n      delete opts.hostname;\n      delete opts._defaultAgent;\n      delete opts.defaultPort;\n      delete opts.createConnection; // Hint to use \"Connection: close\"\n      // XXX: non-documented `http` module API :(\n\n      req._last = true;\n      req.shouldKeepAlive = false;\n      let timedOut = false;\n      let timeoutId = null;\n      const timeoutMs = opts.timeout || this.timeout;\n\n      const onerror = err => {\n        if (req._hadError) return;\n        req.emit('error', err); // For Safety. Some additional errors might fire later on\n        // and we need to make sure we don't double-fire the error event.\n\n        req._hadError = true;\n      };\n\n      const ontimeout = () => {\n        timeoutId = null;\n        timedOut = true;\n        const err = new Error(`A \"socket\" was not created for HTTP request before ${timeoutMs}ms`);\n        err.code = 'ETIMEOUT';\n        onerror(err);\n      };\n\n      const callbackError = err => {\n        if (timedOut) return;\n\n        if (timeoutId !== null) {\n          clearTimeout(timeoutId);\n          timeoutId = null;\n        }\n\n        onerror(err);\n      };\n\n      const onsocket = socket => {\n        if (timedOut) return;\n\n        if (timeoutId != null) {\n          clearTimeout(timeoutId);\n          timeoutId = null;\n        }\n\n        if (isAgent(socket)) {\n          // `socket` is actually an `http.Agent` instance, so\n          // relinquish responsibility for this `req` to the Agent\n          // from here on\n          debug('Callback returned another Agent instance %o', socket.constructor.name);\n          socket.addRequest(req, opts);\n          return;\n        }\n\n        if (socket) {\n          socket.once('free', () => {\n            this.freeSocket(socket, opts);\n          });\n          req.onSocket(socket);\n          return;\n        }\n\n        const err = new Error(`no Duplex stream was returned to agent-base for \\`${req.method} ${req.path}\\``);\n        onerror(err);\n      };\n\n      if (typeof this.callback !== 'function') {\n        onerror(new Error('`callback` is not defined'));\n        return;\n      }\n\n      if (!this.promisifiedCallback) {\n        if (this.callback.length >= 3) {\n          debug('Converting legacy callback function to promise');\n          this.promisifiedCallback = promisify_1.default(this.callback);\n        } else {\n          this.promisifiedCallback = this.callback;\n        }\n      }\n\n      if (typeof timeoutMs === 'number' && timeoutMs > 0) {\n        timeoutId = setTimeout(ontimeout, timeoutMs);\n      }\n\n      if ('port' in opts && typeof opts.port !== 'number') {\n        opts.port = Number(opts.port);\n      }\n\n      try {\n        debug('Resolving socket for %o request: %o', opts.protocol, `${req.method} ${req.path}`);\n        Promise.resolve(this.promisifiedCallback(req, opts)).then(onsocket, callbackError);\n      } catch (err) {\n        Promise.reject(err).catch(callbackError);\n      }\n    }\n\n    freeSocket(socket, opts) {\n      debug('Freeing socket %o %o', socket.constructor.name, opts);\n      socket.destroy();\n    }\n\n    destroy() {\n      debug('Destroying agent %o', this.constructor.name);\n    }\n\n  }\n\n  createAgent.Agent = Agent; // So that `instanceof` works correctly\n\n  createAgent.prototype = createAgent.Agent.prototype;\n})(createAgent || (createAgent = {}));\n\nmodule.exports = createAgent;","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nconst events_1 = require(\"events\");\r\nconst debug_1 = __importDefault(require(\"debug\"));\r\nconst promisify_1 = __importDefault(require(\"./promisify\"));\r\nconst debug = debug_1.default('agent-base');\r\nfunction isAgent(v) {\r\n    return Boolean(v) && typeof v.addRequest === 'function';\r\n}\r\nfunction isSecureEndpoint() {\r\n    const { stack } = new Error();\r\n    if (typeof stack !== 'string')\r\n        return false;\r\n    return stack.split('\\n').some(l => l.indexOf('(https.js:') !== -1 || l.indexOf('node:https:') !== -1);\r\n}\r\nfunction createAgent(callback, opts) {\r\n    return new createAgent.Agent(callback, opts);\r\n}\r\n(function (createAgent) {\r\n    /**\r\n     * Base `http.Agent` implementation.\r\n     * No pooling/keep-alive is implemented by default.\r\n     *\r\n     * @param {Function} callback\r\n     * @api public\r\n     */\r\n    class Agent extends events_1.EventEmitter {\r\n        constructor(callback, _opts) {\r\n            super();\r\n            let opts = _opts;\r\n            if (typeof callback === 'function') {\r\n                this.callback = callback;\r\n            }\r\n            else if (callback) {\r\n                opts = callback;\r\n            }\r\n            // Timeout for the socket to be returned from the callback\r\n            this.timeout = null;\r\n            if (opts && typeof opts.timeout === 'number') {\r\n                this.timeout = opts.timeout;\r\n            }\r\n            // These aren't actually used by `agent-base`, but are required\r\n            // for the TypeScript definition files in `@types/node` :/\r\n            this.maxFreeSockets = 1;\r\n            this.maxSockets = 1;\r\n            this.maxTotalSockets = Infinity;\r\n            this.sockets = {};\r\n            this.freeSockets = {};\r\n            this.requests = {};\r\n            this.options = {};\r\n        }\r\n        get defaultPort() {\r\n            if (typeof this.explicitDefaultPort === 'number') {\r\n                return this.explicitDefaultPort;\r\n            }\r\n            return isSecureEndpoint() ? 443 : 80;\r\n        }\r\n        set defaultPort(v) {\r\n            this.explicitDefaultPort = v;\r\n        }\r\n        get protocol() {\r\n            if (typeof this.explicitProtocol === 'string') {\r\n                return this.explicitProtocol;\r\n            }\r\n            return isSecureEndpoint() ? 'https:' : 'http:';\r\n        }\r\n        set protocol(v) {\r\n            this.explicitProtocol = v;\r\n        }\r\n        callback(req, opts, fn) {\r\n            throw new Error('\"agent-base\" has no default implementation, you must subclass and override `callback()`');\r\n        }\r\n        /**\r\n         * Called by node-core's \"_http_client.js\" module when creating\r\n         * a new HTTP request with this Agent instance.\r\n         *\r\n         * @api public\r\n         */\r\n        addRequest(req, _opts) {\r\n            const opts = Object.assign({}, _opts);\r\n            if (typeof opts.secureEndpoint !== 'boolean') {\r\n                opts.secureEndpoint = isSecureEndpoint();\r\n            }\r\n            if (opts.host == null) {\r\n                opts.host = 'localhost';\r\n            }\r\n            if (opts.port == null) {\r\n                opts.port = opts.secureEndpoint ? 443 : 80;\r\n            }\r\n            if (opts.protocol == null) {\r\n                opts.protocol = opts.secureEndpoint ? 'https:' : 'http:';\r\n            }\r\n            if (opts.host && opts.path) {\r\n                // If both a `host` and `path` are specified then it's most\r\n                // likely the result of a `url.parse()` call... we need to\r\n                // remove the `path` portion so that `net.connect()` doesn't\r\n                // attempt to open that as a unix socket file.\r\n                delete opts.path;\r\n            }\r\n            delete opts.agent;\r\n            delete opts.hostname;\r\n            delete opts._defaultAgent;\r\n            delete opts.defaultPort;\r\n            delete opts.createConnection;\r\n            // Hint to use \"Connection: close\"\r\n            // XXX: non-documented `http` module API :(\r\n            req._last = true;\r\n            req.shouldKeepAlive = false;\r\n            let timedOut = false;\r\n            let timeoutId = null;\r\n            const timeoutMs = opts.timeout || this.timeout;\r\n            const onerror = (err) => {\r\n                if (req._hadError)\r\n                    return;\r\n                req.emit('error', err);\r\n                // For Safety. Some additional errors might fire later on\r\n                // and we need to make sure we don't double-fire the error event.\r\n                req._hadError = true;\r\n            };\r\n            const ontimeout = () => {\r\n                timeoutId = null;\r\n                timedOut = true;\r\n                const err = new Error(`A \"socket\" was not created for HTTP request before ${timeoutMs}ms`);\r\n                err.code = 'ETIMEOUT';\r\n                onerror(err);\r\n            };\r\n            const callbackError = (err) => {\r\n                if (timedOut)\r\n                    return;\r\n                if (timeoutId !== null) {\r\n                    clearTimeout(timeoutId);\r\n                    timeoutId = null;\r\n                }\r\n                onerror(err);\r\n            };\r\n            const onsocket = (socket) => {\r\n                if (timedOut)\r\n                    return;\r\n                if (timeoutId != null) {\r\n                    clearTimeout(timeoutId);\r\n                    timeoutId = null;\r\n                }\r\n                if (isAgent(socket)) {\r\n                    // `socket` is actually an `http.Agent` instance, so\r\n                    // relinquish responsibility for this `req` to the Agent\r\n                    // from here on\r\n                    debug('Callback returned another Agent instance %o', socket.constructor.name);\r\n                    socket.addRequest(req, opts);\r\n                    return;\r\n                }\r\n                if (socket) {\r\n                    socket.once('free', () => {\r\n                        this.freeSocket(socket, opts);\r\n                    });\r\n                    req.onSocket(socket);\r\n                    return;\r\n                }\r\n                const err = new Error(`no Duplex stream was returned to agent-base for \\`${req.method} ${req.path}\\``);\r\n                onerror(err);\r\n            };\r\n            if (typeof this.callback !== 'function') {\r\n                onerror(new Error('`callback` is not defined'));\r\n                return;\r\n            }\r\n            if (!this.promisifiedCallback) {\r\n                if (this.callback.length >= 3) {\r\n                    debug('Converting legacy callback function to promise');\r\n                    this.promisifiedCallback = promisify_1.default(this.callback);\r\n                }\r\n                else {\r\n                    this.promisifiedCallback = this.callback;\r\n                }\r\n            }\r\n            if (typeof timeoutMs === 'number' && timeoutMs > 0) {\r\n                timeoutId = setTimeout(ontimeout, timeoutMs);\r\n            }\r\n            if ('port' in opts && typeof opts.port !== 'number') {\r\n                opts.port = Number(opts.port);\r\n            }\r\n            try {\r\n                debug('Resolving socket for %o request: %o', opts.protocol, `${req.method} ${req.path}`);\r\n                Promise.resolve(this.promisifiedCallback(req, opts)).then(onsocket, callbackError);\r\n            }\r\n            catch (err) {\r\n                Promise.reject(err).catch(callbackError);\r\n            }\r\n        }\r\n        freeSocket(socket, opts) {\r\n            debug('Freeing socket %o %o', socket.constructor.name, opts);\r\n            socket.destroy();\r\n        }\r\n        destroy() {\r\n            debug('Destroying agent %o', this.constructor.name);\r\n        }\r\n    }\r\n    createAgent.Agent = Agent;\r\n    // So that `instanceof` works correctly\r\n    createAgent.prototype = createAgent.Agent.prototype;\r\n})(createAgent || (createAgent = {}));\r\nmodule.exports = createAgent;\r\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}
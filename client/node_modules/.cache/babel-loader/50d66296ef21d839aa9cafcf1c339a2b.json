{"ast":null,"code":"var _jsxFileName = \"/Users/khalid-alsheeb/5CCS2SEG/MajorGroupProject/src/AdminLogin.js\",\n    _s = $RefreshSig$();\n\nimport { withFormik, useFormik } from \"formik\";\nimport { React } from \"react\";\nimport reactDom from \"react-dom\";\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\nimport { Form, Container, Button } from \"react-bootstrap\";\nimport * as Yup from \"yup\"; //This is the style of the login box\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loginStyle = {\n  margin: \"33px auto 36px\",\n  maxWidth: \"550px\",\n  padding: \"35px\"\n}; //This the the main page it has the main container and the login box.\n\nconst AdminLogin = () => /*#__PURE__*/_jsxDEV(Container, {\n  className: \"border border-secondary\",\n  style: loginStyle,\n  children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 5\n}, this); //A schema to make sure that all entered details' requirements are met\n\n\n_c = AdminLogin;\nconst adminSchema = Yup.object().shape({\n  username: Yup.string().required(),\n  password: Yup.string().required()\n}); // The login form. It controls how the data is managed, and it returns the form\n// that will be displayed.\n\nconst Login = () => {\n  _s();\n\n  const history = useHistory();\n\n  const reroute = () => {\n    let newPage = 'AdminPage';\n    history.push(newPage);\n  };\n\n  const Formik = useFormik({\n    initialValues: {\n      username: \"\",\n      password: \"\"\n    },\n    validationSchema: adminSchema,\n\n    onSubmit(values) {\n      console.log(\"Log in details: \", values);\n      reroute();\n    }\n\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: Formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Admin Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        id: \"username\",\n        name: \"username\",\n        type: \"text\",\n        placeholder: \"Enter Username\",\n        value: Formik.values.username,\n        onChange: Formik.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Admin Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        id: \"password\",\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        value: Formik.values.password,\n        onChange: Formik.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"reejxrRDsUTh8NNcV37XvfRAHvw=\", false, function () {\n  return [useHistory, useFormik];\n});\n\n_c2 = Login;\nexport default AdminLogin;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AdminLogin\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"sources":["/Users/khalid-alsheeb/5CCS2SEG/MajorGroupProject/src/AdminLogin.js"],"names":["withFormik","useFormik","React","reactDom","Link","Redirect","useHistory","Form","Container","Button","Yup","loginStyle","margin","maxWidth","padding","AdminLogin","adminSchema","object","shape","username","string","required","password","Login","history","reroute","newPage","push","Formik","initialValues","validationSchema","onSubmit","values","console","log","handleSubmit","handleChange"],"mappings":"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","sourcesContent":["import { withFormik, useFormik } from \"formik\";\nimport { React } from \"react\";\nimport reactDom from \"react-dom\";\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\nimport { Form, Container, Button } from \"react-bootstrap\";\nimport * as Yup from \"yup\";\n\n\n//This is the style of the login box\nconst loginStyle = {\n    margin: \"33px auto 36px\",\n    maxWidth: \"550px\",\n    padding: \"35px\",\n};\n\n//This the the main page it has the main container and the login box.\nconst AdminLogin = () => (\n    <Container className=\"border border-secondary\" style={loginStyle}>\n    <Login />\n    </Container>\n);\n\n//A schema to make sure that all entered details' requirements are met\nconst adminSchema = Yup.object().shape({\n    username: Yup.string()\n        .required(),\n    \n    password: Yup.string()\n        .required()\n});\n\n// The login form. It controls how the data is managed, and it returns the form\n// that will be displayed.\nconst Login = () => {\n\n\n    const history = useHistory();\n\n    const reroute = () => {\n        let newPage = 'AdminPage';\n        history.push(newPage);\n    }\n\n    const Formik = useFormik({\n        initialValues: {\n            username: \"\",\n            password: \"\"\n        },\n        validationSchema: adminSchema,\n        onSubmit(values) {\n            console.log(\"Log in details: \", values);\n            reroute();\n        }\n    });\n\n    return(\n        <Form onSubmit={Formik.handleSubmit} >\n            <Form.Group>\n            <Form.Label>Admin Username</Form.Label>\n            <Form.Control\n                id=\"username\"\n                name=\"username\"\n                type=\"text\"\n                placeholder=\"Enter Username\"\n                value={Formik.values.username}\n                onChange={Formik.handleChange}\n            />\n            </Form.Group>\n\n            <Form.Group>\n            <Form.Label>Admin Password</Form.Label>\n            <Form.Control\n                id=\"password\"\n                name=\"password\"\n                type=\"password\" \n                placeholder=\"Password\"\n                value={Formik.values.password}\n                onChange={Formik.handleChange}\n            />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">Login</Button>\n        </Form>\n    )\n\n}\n\n\n\nexport default AdminLogin;"]},"metadata":{},"sourceType":"module"}